
# name: README.org 
# edit: 2019-07-01 (YYYY-MM-DD)

#+OPTIONS: toc:nil

#+LATEX_CLASS:    koma-article  
#+LATEX_HEADER:   \usepackage[a4paper]{geometry}
#+LATEX_HEADER:   \usepackage{libertine, microtype, graphicx, float, booktabs, amsmath, siunitx}
#+LATEX_HEADER:   \usepackage[USenglish]{babel}
#+LATEX_HEADER:   \usepackage[scaled=0.9]{inconsolata}
#+LATEX_HEADER:   \usepackage[libertine]{newtxmath}

#+LATEX_HEADER:   \setkomafont{captionlabel}{\sffamily\bfseries}
#+LATEX_HEADER:   \setcapindent{0em}  \setkomafont{caption}{\small}
#+LATEX_HEADER:   \usepackage[basicstyle=small]{listings}


* Background
   
   The Bemis-Murcko scaffold[fn:1] provided by =DataWarrior=[fn:2]
   retains information about bond order and chirality.  There are
   instances where retaining only information about which atoms are
   connected with each other, but not their bond order is desired.
   This corresponds to the assumption 'there are only single bonds'.
   =DataWarrior= equally offers the export of Bemis-Murcko skeleton,
   however this simplifies e.g. the scaffold about an imidazole into
   one of cyclopentane.

   [[./pattern.png]]

* Typical use

   The script is to be used on the CLI of Python3 with the mandatory
   parameter about listing file containing the SMILES to work with:
   #+BEGIN_SRC shell
     python saturate_MurckoScaffolds.py [listing_file.txt]
   #+END_SRC
   to generate =saturated_Murcko_scaffold.csv= as permanent record.
   The script equally works with the legacy of Python2.17, too.

* Example

  For a collection of organic materials, the Bemis-Murcko scaffolds
  was extracted with =DataWarrior= (release 5.0.0 for Linux) as
  listing =Murcko_scaffolds_with_bond_order.txt=.  The "saturation"
  was obtained by
    #+BEGIN_SRC shell
      python saturate_MurckoScaffolds.py Murcko_scaffolds_with_bond_order.txt
   #+END_SRC
   yielding =saturated_Murcko_scaffold.csv=.  The affect of this
   operation on the SMILES strings deposit in the listings are easy to
   see (fig. [[file_diff]]).
   
   #+NAME:       file_diff
   #+CAPTION:    DiffView of the SMILES strings of a Murcko scaffold /prior/ (left hand column) or /after/ an «artifical saturation» (right hand column).  Note the removal of explicit bond order indicators, e.g. double bond (equality sign), triple bond bond (octohorpe), or about implicit aromatization (lower case -> upper case for atoms of carbon, nitrogen (depicted); oxygen or sulfur (not depicted).  At the same time, stereochemical indicators are removed, too (e.g., at-signs).
   #+ATTR_LATEX: :width 8cm
   #+ATTR_HTML:  :width 75%
   [[./2019-07-03_vimdiff.png]]

   For a visual survey about the scaffolds, =openbabel=[fn:3] allows a
   quick check on the CLI by writing a =.svg=, here as:
   #+BEGIN_SRC shell -n1
     obabel -ismi Murcko_scaffolds_with_bond_order.txt -O Murcko_scaffolds_with_bond_order.svg -xc10 -xr12 -xl --addinindex
   #+END_SRC
   This formats the output as an array of 10 columns (=-xc10=) by
   12 rows (=-xr12=) with a grid (=-xl=), where the entries are
   labeled in order of their appearance in the input file
   (=--addinindex=).  If using the GUI of =openbabel= instead of the
   CLI, the later optional parameter is called =Append input index to
   title=.[fn:4]

   The =.svg= may be post-processed further to yield a =.pdf= or a
   =.png=, for example =cairosvg=[fn:5] by a call of
   #+BEGIN_SRC shell -n1
     cairopdf Murcko_scaffold_with_bond_order.svg -o Murcko_scaffold_with_bond_order.pdf
   #+END_SRC
   Alternatively, the =.svg= may be processed in programs like
   =inkscape=.[fn:6] 

   As desired, this "artificial saturation" of double / triple /
   aromatic bonds retains the information about which atoms are
   directly connected with each other.  =openbabel='s algorithm to
   display the molecular structures deals surprisingly well even with
   sometimes complicated motifs (e.g., the scaffold of cyclophane
   [entry #33], sparteine [#38], or adamantane [#50]).

* Footnotes

[fn:1] Bemis GW, Murcko MA /J. Med. Chem./ 1996, **39**, 2887-2893,
[[https://pubs.acs.org/doi/10.1021/jm9602928][doi 10.1021/jm9602928]]

[fn:2] Sander T, Freyss J, von Korff M, Rufener C,
    /J. Chem. Inf. Model./ 2015, **55**, 460-473, [[https://pubs.acs.org/doi/10.1021/ci500588j][doi
    10.1021/ci500588j]].  The program, (c) 2002--2019 by Idorsia
    Pharmaceuticals Ltd., is freely available under
    [[http://www.openmolecules.org]].

[fn:3] [[http://www.openbabel.org][www.openbabel.org]]. This outline is based on release 2.4.1
(Nov 12, 2018) provided by Linux Xubuntu 18.04.2 LTS.

[fn:4] By default, =openbabel= attributes element specific colors.
Especially if the output is print black-and-white, the labels about
atoms like hydrogen, silicon, sulfur, phosphor, then might be barely
intelligible, especially at low scale.  It is possible to toggle off
the element-colors by adding =-xu= as additional parameter of
=openbabel='s conversion after the definition of the output file.

[fn:5] [[https://cairosvg.org/]]

[fn:6] [[https://inkscape.org]]
